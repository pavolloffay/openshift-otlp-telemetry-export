apiVersion: v1
kind: Namespace
metadata:
  name: tutorial-application
  annotations:
    kubecon-tutorial: otel-metrics
---
apiVersion: opentelemetry.io/v1alpha1
kind: Instrumentation
metadata:
  name: my-instrumentation
  namespace: tutorial-application
spec:
  exporter:
    endpoint: http://otel-collector.openshift-logging.svc.cluster.local:4317
  propagators:
    - tracecontext
    - baggage
    - b3
  sampler:
    type: parentbased_traceidratio
    argument: "1"
  resource:
    addK8sUIDAttributes: true
  python:
    env:
      # Required if endpoint is set to 4317.
      # Python autoinstrumentation uses http/proto by default
      # so data must be sent to 4318 instead of 4317.
      - name: OTEL_EXPORTER_OTLP_ENDPOINT
        value: http://otel-collector.openshift-logging.svc.cluster.local:4318
  java:
    env:
      - name: OTEL_LOGS_EXPORTER
        value: otlp
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend1-deployment
  namespace: tutorial-application
  labels:
    app: backend1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend1
  template:
    metadata:
      labels:
        app: backend1
      annotations:
        prometheus.io/scrape: "true"
        instrumentation.opentelemetry.io/inject-python: "true"
    spec:
      containers:
        - name: backend1
          image: ghcr.io/pavolloffay/kubecon-eu-2024-opentelemetry-kubernetes-tracing-tutorial-backend1:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5000
              name: service
---
apiVersion: v1
kind: Service
metadata:
  name: backend1-service
  namespace: tutorial-application
  labels:
    app: backend1
  annotations:
    prometheus.io/scrape: "true"
spec:
  ports:
    - name: http
      port: 5000
      targetPort: 5000
  selector:
    app: backend1
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend2-deployment
  namespace: tutorial-application
  labels:
    app: backend2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend2
  template:
    metadata:
      labels:
        app: backend2
      annotations:
        prometheus.io/scrape: "true"
        instrumentation.opentelemetry.io/inject-java: "true"
    spec:
      containers:
        - name: backend2
          image: ghcr.io/pavolloffay/kubecon-eu-2024-opentelemetry-kubernetes-tracing-tutorial-backend2:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5165
---
apiVersion: v1
kind: Service
metadata:
  name: backend2-service
  namespace: tutorial-application
  labels:
    app: backend2
  annotations:
    prometheus.io/scrape: "true"
spec:
  ports:
    - name: http
      port: 5165
      targetPort: 5165
  selector:
    app: backend2
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  namespace: tutorial-application
  labels:
    app: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
      annotations:
        prometheus.io/scrape: "true"
        instrumentation.opentelemetry.io/inject-sdk: "true"
    spec:
      containers:
        - name: frontend
          image: ghcr.io/pavolloffay/kubecon-eu-2024-opentelemetry-kubernetes-tracing-tutorial-frontend:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: OTEL_INSTRUMENTATION_ENABLED
              value: "true"
            - name: BACKEND1_URL
              value: "http://backend1-service:5000/rolldice"
            - name: BACKEND2_URL
              value: "http://backend2-service:5165/rolldice"
          ports:
            - containerPort: 4000
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: tutorial-application
  labels:
    app: frontend
  annotations:
    prometheus.io/scrape: "true"
spec:
  ports:
    - name: http
      port: 4000
      targetPort: 4000
  selector:
    app: frontend
---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: loadgen-deployment
#  namespace: tutorial-application
#  labels:
#    app: loadgen
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      app: loadgen
#  template:
#    metadata:
#      labels:
#        app: loadgen
#    spec:
#      containers:
#      - name: frontend
#        image: ghcr.io/pavolloffay/kubecon-eu-2024-opentelemetry-kubernetes-tracing-tutorial-loadgen:latest
#        imagePullPolicy: IfNotPresent
#        env:
#          - name: URL
#            value: "http://frontend-service:4000/"